<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 사용자 정의 클래스 메모리 할당(객체관리 : 생성~소멸) -->
	<context:component-scan base-package="com.sist.*"/>
	<!--
		 패키지단위로 등록
		 1. 메모리 할당(스프링 관리하는 클래스를 선택) 할 클래스 등록)
		   1) 클래스의 종류
		     (1) 데이터형으로 사용하는 클래스 : 메모리할당(x) → 프로그래머가 사용
		     	 ~VO, ~DTO(웹에 전송 → 관련된 데이터를 묶어서 전송)
		     (2) 데이터베이스 연동 : 오라클연결(SQL → 결과값)
		     	 ~DAO / @Repository
		     (3) 웹 연동 : 크롤링, XML
		     	 ~Manager / @Component
		     (4) JSP와 연결(요청처리=결과값 전송)
		     	 ~Controller / @Controller, @RestController
		     (5) 데이터베이스 여러개 통합
		      	 ~Sevice / @Service
		     (6) 자바로환경 설정하는 클래스
		     	 ~Config
		     (7) 통합예외처리
		     	 ~Advice / @ControllerAdvice
	-->
	
	<!-- MVC한글설정 -->
	
	<!-- 메모리 할당되는 클래스 : 반드시 어노테이션이 존재한다 -->
	<mvc:annotation-driven/>
	<!-- View Resolver 설정: JSP(경로명, 확장자 입력) -->
	<bean id="viewresolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/"
		p:suffix=".jsp"
	/>
	<bean id="multipartReolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	/>
</beans>
